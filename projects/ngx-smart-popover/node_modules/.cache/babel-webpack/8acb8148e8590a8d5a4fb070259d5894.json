{"ast":null,"code":"import _classCallCheck from \"/Users/pim/ngx-smart-popover/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/pim/ngx-smart-popover/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/pim/ngx-smart-popover/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/pim/ngx-smart-popover/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport { AsyncScheduler } from './AsyncScheduler';\nexport var AsapScheduler = /*#__PURE__*/function (_AsyncScheduler) {\n  _inherits(AsapScheduler, _AsyncScheduler);\n\n  var _super = _createSuper(AsapScheduler);\n\n  function AsapScheduler() {\n    _classCallCheck(this, AsapScheduler);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(AsapScheduler, [{\n    key: \"flush\",\n    value: function flush(action) {\n      this._active = true;\n      var flushId = this._scheduled;\n      this._scheduled = undefined;\n      var actions = this.actions;\n      var error;\n      action = action || actions.shift();\n\n      do {\n        if (error = action.execute(action.state, action.delay)) {\n          break;\n        }\n      } while ((action = actions[0]) && action.id === flushId && actions.shift());\n\n      this._active = false;\n\n      if (error) {\n        while ((action = actions[0]) && action.id === flushId && actions.shift()) {\n          action.unsubscribe();\n        }\n\n        throw error;\n      }\n    }\n  }]);\n\n  return AsapScheduler;\n}(AsyncScheduler); //# sourceMappingURL=AsapScheduler.js.map","map":null,"metadata":{},"sourceType":"module"}